1： 前端部署

前端项目构建
cd E:\EasyScheduler-Fork\EasyScheduler\escheduler-ui
用命令行模式 cd 进入 escheduler-ui项目目录并执行 npm install 拉取项目依赖包
如果 npm install 速度非常慢

可以转淘宝镜像命令行输入 npm install -g cnpm --registry=https://registry.npm.taobao.org

运行 cnpm install

新建一个.env文件，用于跟后端交互的接口
在escheduler-ui目录下新建一个.env文件，在文件里添加后端服务的ip地址和端口，
用于跟后端交互，.env文件内容如下：

# 代理的接口地址（自行修改）
API_BASE = http://192.168.xx.xx:12345

# 如果您需要用ip访问项目可以把 "#" 号去掉（例）
#DEV_HOST = 192.168.xx.xx
！！！这里特别注意 项目如果在拉取依赖包的过程中报 " node-sass error " 错误，请在执行完后再次执行以下命令
npm install node-sass --unsafe-perm //单独安装node-sass依赖

开发环境运行
npm start 项目开发环境 (启动后访问地址 http://localhost:8888/#/)


前端项目发布
在终端输入npm run build
npm run build 项目打包 (打包后根目录会创建一个名为dist文件夹，用于发布线上Nginx)
运行 npm run build 命令，生成打包文件（dist）包

再拷贝到服务器对应的目录下（前端服务静态页面存放目录）
说明： dist 目录下所有的文件，就是需要部署的文件

访问地址 http://localhost:8888/#/

Liunx下使用node启动并且守护进程
安装pm2 npm install -g pm2

在项目escheduler-ui根目录执行 pm2 start npm -- run dev 启动项目
命令
启用 pm2 start npm -- run dev

停止 pm2 stop npm

删除 pm2 delete npm

状态 pm2 list



2：后端部署
编译源码来部署
将源码包release版本下载后，解压进入根目录

执行编译命令：
 mvn -U clean package assembly:assembly -Dmaven.test.skip=true
查看目录
正常编译完后，会在当前目录生成 target/escheduler-{version}/ ， 然后参考
最终生成的部署压缩包： escheduler-1.1.0-SNAPSHOT.tar.gz
